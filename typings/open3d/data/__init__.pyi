from typing import Dict, List, overload

open3d_downloads_prefix: str

class ArmadilloMesh(DownloadDataset):
    def __init__(self, data_root: str = ...) -> None: ...
    @property
    def path(self) -> str: ...

class AvocadoModel(DownloadDataset):
    def __init__(self, data_root: str = ...) -> None: ...
    @property
    def path(self) -> str: ...

class BedroomRGBDImages(DownloadDataset):
    def __init__(self, data_root: str = ...) -> None: ...
    @property
    def color_paths(self) -> List[str]: ...
    @property
    def depth_paths(self) -> List[str]: ...
    @property
    def reconstruction_path(self) -> str: ...
    @property
    def trajectory_log_path(self) -> str: ...

class BunnyMesh(DownloadDataset):
    def __init__(self, data_root: str = ...) -> None: ...
    @property
    def path(self) -> str: ...

class CrateModel(DownloadDataset):
    def __init__(self, data_root: str = ...) -> None: ...
    @property
    def path(self) -> str: ...
    @property
    def path_map(self) -> Dict[str, str]: ...

class DamagedHelmetModel(DownloadDataset):
    def __init__(self, data_root: str = ...) -> None: ...
    @property
    def path(self) -> str: ...

class DataDescriptor:
    @overload
    def __init__(self, urls: List[str], md5: str, extract_in_subdir: str = ...) -> None: ...
    @overload
    def __init__(self, url: str, md5: str, extract_in_subdir: str = ...) -> None: ...
    @property
    def extract_in_subdir(self) -> str: ...
    @property
    def md5(self) -> str: ...
    @property
    def urls(self) -> List[str]: ...

class Dataset:
    def __init__(self, prefix: str, data_root: str = ...) -> None: ...
    @property
    def data_root(self) -> str: ...
    @property
    def download_dir(self) -> str: ...
    @property
    def extract_dir(self) -> str: ...
    @property
    def prefix(self) -> str: ...

class DemoColoredICPPointClouds(DownloadDataset):
    def __init__(self, data_root: str = ...) -> None: ...
    @property
    def paths(self) -> List[str]: ...

class DemoCropPointCloud(DownloadDataset):
    def __init__(self, data_root: str = ...) -> None: ...
    @property
    def cropped_json_path(self) -> str: ...
    @property
    def point_cloud_path(self) -> str: ...

class DemoCustomVisualization(DownloadDataset):
    def __init__(self, data_root: str = ...) -> None: ...
    @property
    def camera_trajectory_path(self) -> str: ...
    @property
    def point_cloud_path(self) -> str: ...
    @property
    def render_option_path(self) -> str: ...

class DemoFeatureMatchingPointClouds(DownloadDataset):
    def __init__(self, data_root: str = ...) -> None: ...
    @property
    def fpfh_feature_paths(self) -> List[str]: ...
    @property
    def l32d_feature_paths(self) -> List[str]: ...
    @property
    def point_cloud_paths(self) -> List[str]: ...

class DemoICPPointClouds(DownloadDataset):
    def __init__(self, data_root: str = ...) -> None: ...
    @property
    def paths(self) -> List[str]: ...
    @property
    def transformation_log_path(self) -> str: ...

class DemoPoseGraphOptimization(DownloadDataset):
    def __init__(self, data_root: str = ...) -> None: ...
    @property
    def pose_graph_fragment_path(self) -> str: ...
    @property
    def pose_graph_global_path(self) -> str: ...

class DownloadDataset(Dataset):
    def __init__(self, prefix: str, data_descriptor: DataDescriptor, data_root: str = ...) -> None: ...

class EaglePointCloud(DownloadDataset):
    def __init__(self, data_root: str = ...) -> None: ...
    @property
    def path(self) -> str: ...

class FlightHelmetModel(DownloadDataset):
    def __init__(self, data_root: str = ...) -> None: ...
    @property
    def path(self) -> str: ...
    @property
    def path_map(self) -> Dict[str, str]: ...

class JackJackL515Bag(DownloadDataset):
    def __init__(self, data_root: str = ...) -> None: ...
    @property
    def path(self) -> str: ...

class JuneauImage(DownloadDataset):
    def __init__(self, data_root: str = ...) -> None: ...
    @property
    def path(self) -> str: ...

class KnotMesh(DownloadDataset):
    def __init__(self, data_root: str = ...) -> None: ...
    @property
    def path(self) -> str: ...

class LivingRoomPointClouds(DownloadDataset):
    def __init__(self, data_root: str = ...) -> None: ...
    @property
    def paths(self) -> List[str]: ...

class LoungeRGBDImages(DownloadDataset):
    def __init__(self, data_root: str = ...) -> None: ...
    @property
    def color_paths(self) -> List[str]: ...
    @property
    def depth_paths(self) -> List[str]: ...
    @property
    def reconstruction_path(self) -> str: ...
    @property
    def trajectory_log_path(self) -> str: ...

class MetalTexture(DownloadDataset):
    def __init__(self, data_root: str = ...) -> None: ...
    @property
    def albedo_texture_path(self) -> str: ...
    @property
    def metallic_texture_path(self) -> str: ...
    @property
    def normal_texture_path(self) -> str: ...
    @property
    def path_map(self) -> Dict[str, str]: ...
    @property
    def roughness_texture_path(self) -> str: ...

class MonkeyModel(DownloadDataset):
    def __init__(self, data_root: str = ...) -> None: ...
    @property
    def path(self) -> str: ...
    @property
    def path_map(self) -> Dict[str, str]: ...

class OfficePointClouds(DownloadDataset):
    def __init__(self, data_root: str = ...) -> None: ...
    @property
    def paths(self) -> List[str]: ...

class PCDPointCloud(DownloadDataset):
    def __init__(self, data_root: str = ...) -> None: ...
    @property
    def path(self) -> str: ...

class PLYPointCloud(DownloadDataset):
    def __init__(self, data_root: str = ...) -> None: ...
    @property
    def path(self) -> str: ...

class PaintedPlasterTexture(DownloadDataset):
    def __init__(self, data_root: str = ...) -> None: ...
    @property
    def albedo_texture_path(self) -> str: ...
    @property
    def normal_texture_path(self) -> str: ...
    @property
    def path_map(self) -> Dict[str, str]: ...
    @property
    def roughness_texture_path(self) -> str: ...

class RedwoodIndoorLivingRoom1(DownloadDataset):
    def __init__(self, data_root: str = ...) -> None: ...
    @property
    def color_paths(self) -> List[str]: ...
    @property
    def depth_paths(self) -> List[str]: ...
    @property
    def noise_model_path(self) -> str: ...
    @property
    def noisy_depth_paths(self) -> List[str]: ...
    @property
    def oni_path(self) -> str: ...
    @property
    def point_cloud_path(self) -> str: ...
    @property
    def trajectory_path(self) -> str: ...

class RedwoodIndoorLivingRoom2(DownloadDataset):
    def __init__(self, data_root: str = ...) -> None: ...
    @property
    def color_paths(self) -> List[str]: ...
    @property
    def depth_paths(self) -> List[str]: ...
    @property
    def noise_model_path(self) -> str: ...
    @property
    def noisy_depth_paths(self) -> List[str]: ...
    @property
    def oni_path(self) -> str: ...
    @property
    def point_cloud_path(self) -> str: ...
    @property
    def trajectory_path(self) -> str: ...

class RedwoodIndoorOffice1(DownloadDataset):
    def __init__(self, data_root: str = ...) -> None: ...
    @property
    def color_paths(self) -> List[str]: ...
    @property
    def depth_paths(self) -> List[str]: ...
    @property
    def noise_model_path(self) -> str: ...
    @property
    def noisy_depth_paths(self) -> List[str]: ...
    @property
    def oni_path(self) -> str: ...
    @property
    def point_cloud_path(self) -> str: ...
    @property
    def trajectory_path(self) -> str: ...

class RedwoodIndoorOffice2(DownloadDataset):
    def __init__(self, data_root: str = ...) -> None: ...
    @property
    def color_paths(self) -> List[str]: ...
    @property
    def depth_paths(self) -> List[str]: ...
    @property
    def noise_model_path(self) -> str: ...
    @property
    def noisy_depth_paths(self) -> List[str]: ...
    @property
    def oni_path(self) -> str: ...
    @property
    def point_cloud_path(self) -> str: ...
    @property
    def trajectory_path(self) -> str: ...

class SampleFountainRGBDImages(DownloadDataset):
    def __init__(self, data_root: str = ...) -> None: ...
    @property
    def color_paths(self) -> List[str]: ...
    @property
    def depth_paths(self) -> List[str]: ...
    @property
    def keyframe_poses_log_path(self) -> str: ...
    @property
    def reconstruction_path(self) -> str: ...

class SampleL515Bag(DownloadDataset):
    def __init__(self, data_root: str = ...) -> None: ...
    @property
    def path(self) -> str: ...

class SampleNYURGBDImage(DownloadDataset):
    def __init__(self, data_root: str = ...) -> None: ...
    @property
    def color_path(self) -> str: ...
    @property
    def depth_path(self) -> str: ...

class SampleRedwoodRGBDImages(DownloadDataset):
    def __init__(self, data_root: str = ...) -> None: ...
    @property
    def camera_intrinsic_path(self) -> str: ...
    @property
    def color_paths(self) -> List[str]: ...
    @property
    def depth_paths(self) -> List[str]: ...
    @property
    def odometry_log_path(self) -> str: ...
    @property
    def reconstruction_path(self) -> str: ...
    @property
    def rgbd_match_path(self) -> str: ...
    @property
    def trajectory_log_path(self) -> str: ...

class SampleSUNRGBDImage(DownloadDataset):
    def __init__(self, data_root: str = ...) -> None: ...
    @property
    def color_path(self) -> str: ...
    @property
    def depth_path(self) -> str: ...

class SampleTUMRGBDImage(DownloadDataset):
    def __init__(self, data_root: str = ...) -> None: ...
    @property
    def color_path(self) -> str: ...
    @property
    def depth_path(self) -> str: ...

class SwordModel(DownloadDataset):
    def __init__(self, data_root: str = ...) -> None: ...
    @property
    def path(self) -> str: ...
    @property
    def path_map(self) -> Dict[str, str]: ...

class TerrazzoTexture(DownloadDataset):
    def __init__(self, data_root: str = ...) -> None: ...
    @property
    def albedo_texture_path(self) -> str: ...
    @property
    def normal_texture_path(self) -> str: ...
    @property
    def path_map(self) -> Dict[str, str]: ...
    @property
    def roughness_texture_path(self) -> str: ...

class TilesTexture(DownloadDataset):
    def __init__(self, data_root: str = ...) -> None: ...
    @property
    def albedo_texture_path(self) -> str: ...
    @property
    def normal_texture_path(self) -> str: ...
    @property
    def path_map(self) -> Dict[str, str]: ...
    @property
    def roughness_texture_path(self) -> str: ...

class WoodFloorTexture(DownloadDataset):
    def __init__(self, data_root: str = ...) -> None: ...
    @property
    def albedo_texture_path(self) -> str: ...
    @property
    def normal_texture_path(self) -> str: ...
    @property
    def path_map(self) -> Dict[str, str]: ...
    @property
    def roughness_texture_path(self) -> str: ...

class WoodTexture(DownloadDataset):
    def __init__(self, data_root: str = ...) -> None: ...
    @property
    def albedo_texture_path(self) -> str: ...
    @property
    def normal_texture_path(self) -> str: ...
    @property
    def path_map(self) -> Dict[str, str]: ...
    @property
    def roughness_texture_path(self) -> str: ...
