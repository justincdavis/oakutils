from _typeshed import Incomplete

class Versions:
    v2022_1: str
    v2021_4: str
    v2021_3: str
    v2021_2: str

def get_filename(url): ...
def show_progress(curr, max) -> None: ...

class ConfigBuilder:
    precision: Incomplete
    def __init__(self, precision: str = 'FP16') -> None: ...
    def task_type(self, task_type): ...
    def framework(self, framework): ...
    def model_optimizer_args(self, args: list): ...
    def with_file(self, name, path: Incomplete | None = None, url: Incomplete | None = None, google_drive: Incomplete | None = None, size: Incomplete | None = None, sha256: Incomplete | None = None): ...
    def build(self): ...

s3: Incomplete
bucket: Incomplete

def set_defaults(url: Incomplete | None = None, version: Incomplete | None = None, shaves: Incomplete | None = None, output_dir: Incomplete | None = None, compile_params: list = None, optimizer_params: list = None, data_type: Incomplete | None = None, silent: Incomplete | None = None, zoo_type: Incomplete | None = None, progress_func: Incomplete | None = None): ...
def is_valid_blob(blob_path): ...

class __S3ProgressPercentage:
    def __init__(self, o_s3bucket, key_name) -> None: ...
    def __call__(self, bytes_amount) -> None: ...

def compile_blob(blob_name, version: Incomplete | None = None, shaves: Incomplete | None = None, req_data: Incomplete | None = None, req_files: Incomplete | None = None, output_dir: Incomplete | None = None, url: Incomplete | None = None, use_cache: bool = True, compile_params: Incomplete | None = None, data_type: Incomplete | None = None, download_ir: bool = False, zoo_type: Incomplete | None = None, dry: bool = False): ...
def from_zoo(name, **kwargs): ...
def from_caffe(proto, model, data_type: Incomplete | None = None, optimizer_params: Incomplete | None = None, proto_size: Incomplete | None = None, proto_sha256: Incomplete | None = None, model_size: Incomplete | None = None, model_sha256: Incomplete | None = None, **kwargs): ...
def from_onnx(model, data_type: Incomplete | None = None, optimizer_params: Incomplete | None = None, model_size: Incomplete | None = None, model_sha256: Incomplete | None = None, **kwargs): ...
def from_tf(frozen_pb, data_type: Incomplete | None = None, optimizer_params: Incomplete | None = None, frozen_pb_size: Incomplete | None = None, frozen_pb_sha256: Incomplete | None = None, **kwargs): ...
def from_openvino(xml, bin, xml_size: Incomplete | None = None, xml_sha256: Incomplete | None = None, bin_size: Incomplete | None = None, bin_sha256: Incomplete | None = None, **kwargs): ...
def from_config(name, path, **kwargs): ...
def zoo_list(version: Incomplete | None = None, url: Incomplete | None = None, zoo_type: str = 'intel'): ...
def __run_cli__(): ...
