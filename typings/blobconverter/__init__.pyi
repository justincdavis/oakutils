from typing import Any

class Versions:
    v2022_1: str
    v2021_4: str
    v2021_3: str
    v2021_2: str

def get_filename(url): ...
def show_progress(curr, max) -> None: ...

class ConfigBuilder:
    precision: Any
    def __init__(self, precision: str = ...) -> None: ...
    def task_type(self, task_type): ...
    def framework(self, framework): ...
    def model_optimizer_args(self, args: list): ...
    def with_file(self, name, path: Any | None = ..., url: Any | None = ..., google_drive: Any | None = ..., size: Any | None = ..., sha256: Any | None = ...): ...
    def build(self): ...

s3: Any
bucket: Any

def set_defaults(url: Any | None = ..., version: Any | None = ..., shaves: Any | None = ..., output_dir: Any | None = ..., compile_params: list = ..., optimizer_params: list = ..., data_type: Any | None = ..., silent: Any | None = ..., zoo_type: Any | None = ..., progress_func: Any | None = ...): ...
def is_valid_blob(blob_path): ...

class __S3ProgressPercentage:
    def __init__(self, o_s3bucket, key_name) -> None: ...
    def __call__(self, bytes_amount) -> None: ...

def compile_blob(blob_name, version: Any | None = ..., shaves: Any | None = ..., req_data: Any | None = ..., req_files: Any | None = ..., output_dir: Any | None = ..., url: Any | None = ..., use_cache: bool = ..., compile_params: Any | None = ..., data_type: Any | None = ..., download_ir: bool = ..., zoo_type: Any | None = ..., dry: bool = ...): ...
def from_zoo(name, **kwargs): ...
def from_caffe(proto, model, data_type: Any | None = ..., optimizer_params: Any | None = ..., proto_size: Any | None = ..., proto_sha256: Any | None = ..., model_size: Any | None = ..., model_sha256: Any | None = ..., **kwargs): ...
def from_onnx(model, data_type: Any | None = ..., optimizer_params: Any | None = ..., model_size: Any | None = ..., model_sha256: Any | None = ..., **kwargs): ...
def from_tf(frozen_pb, data_type: Any | None = ..., optimizer_params: Any | None = ..., frozen_pb_size: Any | None = ..., frozen_pb_sha256: Any | None = ..., **kwargs): ...
def from_openvino(xml, bin, xml_size: Any | None = ..., xml_sha256: Any | None = ..., bin_size: Any | None = ..., bin_sha256: Any | None = ..., **kwargs): ...
def from_config(name, path, **kwargs): ...
def zoo_list(version: Any | None = ..., url: Any | None = ..., zoo_type: str = ...): ...
def __run_cli__(): ...
