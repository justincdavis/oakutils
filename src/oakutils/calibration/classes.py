from dataclasses import dataclass
from typing import Optional, Tuple

import numpy as np
import open3d as o3d


@dataclass
class MonoCalibrationData:
    """
    Class to store a mono cameras calibration data
    
    Attributes:
        size: image size
        K: camera matrix
        D: distortion coefficients
        fx: focal length in x
        fy: focal length in y
        cx: principal point in x
        cy: principal point in y
        fov: field of view
        R: rotation matrix
        T: translation matrix
        H: homography matrix
        valid_region: valid region of the calibration generated by cv2.stereoRectify
        map_1: map 1 for undistortion generated by cv2.initUndistortRectifyMap
        map_2: map 2 for undistortion generated by cv2.initUndistortRectifyMap
        pinhole: open3d pinhole camera intrinsic
    """

    size: Tuple[int, int]
    K: np.ndarray
    D: np.ndarray
    fx: float
    fy: float
    cx: float
    cy: float
    fov: float
    R: np.ndarray
    T: np.ndarray
    H: np.ndarray
    valid_region: Optional[Tuple[int, int, int, int]] = None
    map_1: Optional[np.ndarray] = None
    map_2: Optional[np.ndarray] = None
    pinhole: Optional[o3d.camera.PinholeCameraIntrinsic] = None


@dataclass
class StereoCalibrationData:
    """
    Class to store a stereo cameras calibration data

    Attributes:
        left: left camera calibration data
        right: right camera calibration data
        R1: rectification transform for left camera
        R2: rectification transform for right camera
        T1: projection matrix for left camera
        T2: projection matrix for right camera
        H_left: homography matrix for left camera
        H_right: homography matrix for right camera
        l2r_extrinsic: left to right extrinsic matrix
        r2l_extrinsic: right to left extrinsic matrix
        Q_left: Q matrix for left camera
        Q_right: Q matrix for right camera
        baseline: baseline between the two cameras (in meters)
        primary: primary camera calibration data
        Q_primary: Q matrix for primary camera
        cv2_Q: Q matrix generated by cv2.stereoRectify
        cv2_R1: R1 matrix generated by cv2.stereoRectify
        cv2_R2: R2 matrix generated by cv2.stereoRectify
        P1: P1 matrix generated by cv2.stereoRectify
        P2: P2 matrix generated by cv2.stereoRectify
        valid_region_primary: valid region of the primary camera
        pinhole_primary: open3d pinhole camera intrinsic for the primary camera
    """

    left: MonoCalibrationData
    right: MonoCalibrationData
    R1: np.ndarray
    R2: np.ndarray
    T1: np.ndarray
    T2: np.ndarray
    H_left: np.ndarray
    H_right: np.ndarray
    l2r_extrinsic: np.ndarray
    r2l_extrinsic: np.ndarray
    Q_left: np.ndarray
    Q_right: np.ndarray
    baseline: float
    primary: Optional[MonoCalibrationData] = None
    Q_primary: Optional[np.ndarray] = None
    cv2_Q: Optional[np.ndarray] = None
    cv2_R1: Optional[np.ndarray] = None
    cv2_R2: Optional[np.ndarray] = None
    P1: Optional[np.ndarray] = None
    P2: Optional[np.ndarray] = None
    valid_region_primary: Optional[Tuple[int, int, int, int]] = None
    pinhole_primary: Optional[o3d.camera.PinholeCameraIntrinsic] = None


@dataclass
class ColorCalibrationData:
    """
    Class to store a color cameras calibration data
    
    Attributes:
        size: image size
        K: camera matrix
        D: distortion coefficients
        fx: focal length in x
        fy: focal length in y
        cx: principal point in x
        cy: principal point in y
        fov: field of view
        P: projection matrix
        valid_region: valid region of the calibration generated by cv2.getOptimalNewCameraMatrix
        map_1: map 1 for undistortion generated by cv2.initUndistortRectifyMap
        map_2: map 2 for undistortion generated by cv2.initUndistortRectifyMap
        pinhole: open3d pinhole camera intrinsic
    """

    size: Tuple[int, int]
    K: np.ndarray
    D: np.ndarray
    fx: float
    fy: float
    cx: float
    cy: float
    fov: float
    P: Optional[np.ndarray] = None
    valid_region: Optional[Tuple[int, int, int, int]] = None
    map_1: Optional[np.ndarray] = None
    map_2: Optional[np.ndarray] = None
    pinhole: Optional[o3d.camera.PinholeCameraIntrinsic] = None


@dataclass
class CalibrationData:
    """
    Class for rgb and two mono cameras calibration data
    Used for the OAK-D cameras

    Attributes:
        rgb: rgb camera calibration data
        left: left mono camera calibration data
        right: right mono camera calibration data
        stereo: stereo camera calibration data
        primary: primary camera calibration data
    """

    rgb: ColorCalibrationData
    left: MonoCalibrationData
    right: MonoCalibrationData
    stereo: StereoCalibrationData
    primary: Optional[MonoCalibrationData] = None
